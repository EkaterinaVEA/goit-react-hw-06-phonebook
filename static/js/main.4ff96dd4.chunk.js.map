{"version":3,"sources":["components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Container/Container.styles.jsx","components/Container/Container.jsx","redux/contacts/contacrtsActions.js","components/PhoneBookForm/PhoneBookForm.styles.jsx","components/PhoneBookForm/PhoneBookForm.jsx","components/PhoneBookListItem/PhoneBookListItem.styles.jsx","components/PhoneBookListItem/PhoneBookListItem.jsx","redux/contacts/contactsSelectors.js","components/PhoneBookList/PhoneBookList.styles.jsx","components/PhoneBookList/PhoneBooklist.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.jsx","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["Wrapper","styled","section","Title","h2","Section","title","children","Main","div","ContainerContacts","ContainerAdd","Container","contactsActions","addContact","createAction","name","number","payload","id","shortid","deleteContact","changeFilter","Form","form","Label","label","Input","input","Button","button","ContainerForm","PhoneBookForm","useState","setName","setNumber","dispatch","useDispatch","nameInputId","telInputId","handleSetUserInfo","e","currentTarget","value","onSubmit","preventDefault","action","onChange","type","pattern","placeholder","autoComplete","maxLength","required","htmlFor","size","Item","li","propTypes","onClick","PropTypes","func","isRequired","PhoneBookListItem","onDeleteContact","getFilter","state","contacts","filter","getContacts","items","getFilteredContacts","contact","toLowerCase","includes","List","ul","PhoneBookList","useSelector","map","FilterContainer","Filter","filterInputId","target","App","length","createReducer","includedName","find","includedNumber","replace","Swal","fire","position","icon","toUpperCase","confirmButtonColor","checkContact","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4ff96dd4.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.section`\n  padding: 40px 0;\n`;\nexport const Title = styled.h2`\n  margin: 0 auto 50px;\n  text-transform: capitalize;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 50px;\n  text-align: center;\n  color: #727273;\n`;","import PropTypes from 'prop-types';\nimport { Wrapper, Title } from './Section.styles';\nimport { RiBook2Line } from 'react-icons/ri';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && (\n        <Title>\n          <RiBook2Line />\n          {title}\n        </Title>\n      )}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\nexport default Section;","import styled from '@emotion/styled';\n\nexport const Main = styled.div`\n  width: 900px;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n  padding: 30px;\n  border-radius: 20px;\n  box-shadow: -10px -10px 30px 0 #ffffff, 10px 10px 30px 0 #aeaec040;\n  background-color: #f0f0f3;\n  & h1,\n  h2 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #727273;\n    font-size: 28px;\n    margin-bottom: 50px;\n    margin-top: 0;\n    & svg {\n      margin-right: 15px;\n      color: #727273;\n    }\n  }\n`;\n\nexport const ContainerContacts = styled.div`\n  width: 450px;\n`;\nexport const ContainerAdd = styled.div`\n  width: 450px;\n`;\n","import PropTypes from 'prop-types';\nimport { Main } from './Container.styles';\n\nconst Container = ({ children }) => {\n  return <Main>{children}</Main>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Container;","import { createAction } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\nconst contactsActions = {\n  addContact: createAction(\"contacts/add\", (name, number) => ({\n    payload: {\n      id: shortid(),\n      name,\n      number,\n    },\n  })),\n  deleteContact: createAction(\"contacts/delete\"),\n  changeFilter: createAction(\"contacts/changeFilter\"),\n};\n\nexport default contactsActions;","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin: 0 auto 50px;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  left: 0;\n  bottom: 5px;\n  margin-bottom: 10px;\n  cursor: text;\n  font-size: 20px;\n  color: var(--grey);\n\n  transition: color 250ms ease, transform 250ms ease;\n\n  & svg {\n    margin-right: 10px;\n    font-weight: 500;\n    transition: color 250ms ease, transform 250ms ease;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 50px;\n  padding-left: 30px;\n  border: none;\n  border-bottom: 1px solid var(--dark);\n  font-size: 20px;\n  color: var(--dark);\n  background-color: transparent;\n\n  &::placeholder {\n    opacity: 0;\n    color: var(--dark);\n    font-weight: 700;\n    transition: opacity 250ms ease;\n  }\n\n  &:focus {\n    outline: none;\n    border-color: var(--dark);\n    &::placeholder {\n      opacity: 0.7;\n      font-weight: 700;\n      transition-delay: 250ms;\n    }\n  }\n\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    font-size: 0;\n    color: var(--dark);\n    & svg {\n      font-weight: 700;\n      color: var(--dark);\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px 10px;\n  cursor: pointer;\n  border: 1px solid #f0f0f3;\n  box-shadow: -10px -10px 30px 0 #ffffff, 10px 10px 30px 0 #aeaec040;\n  border-radius: 20px;\n  font-size: 20px;\n  text-transform: uppercase;\n  color: var(--dark);\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n  &:hover {\n    transform: scale(1.2);\n  }\n  & svg {\n    margin-right: 10px;\n  }\n`;\nexport const ContainerForm = styled.div`\n  position: relative;\n  width: 400px;\n  margin-bottom: 50px;\n`;","// import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacrtsActions\";\nimport shortid from 'shortid';\nimport { Form, Label, Input, Button, ContainerForm } from './PhoneBookForm.styles';\nimport { RiUserLine, RiPhoneLine, RiUserAddLine } from 'react-icons/ri';\n\nconst PhoneBookForm = (/*{onSubmit}*/) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const nameInputId = shortid();\n  const telInputId = shortid();\n\n  const handleSetUserInfo = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      \n      case \"number\":\n        setNumber(value);\n        break;\n      \n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // onSubmit({name, number});\n    dispatch(contactsActions.addContact(name, number));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n    return (\n    <Form onSubmit={handleSubmit} action=\"\">\n      <ContainerForm>\n        <Input\n          onChange={handleSetUserInfo}\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Name\"\n          autoComplete=\"off\"\n          maxLength=\"40\"\n          required\n        />\n        <Label htmlFor={nameInputId}>\n          <RiUserLine size=\"25\" />\n          Name\n        </Label>\n      </ContainerForm>\n      <ContainerForm>\n        <Input\n          onChange={handleSetUserInfo}\n          id={telInputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          placeholder=\"111-11-11\"\n          autoComplete=\"off\"\n          maxLength=\"15\"\n          required\n        />\n        <Label htmlFor={telInputId}>\n          <RiPhoneLine size=\"25\" />\n          Number\n        </Label>\n      </ContainerForm>\n      <Button type=\"submit\">\n        <RiUserAddLine />\n        Add contact\n      </Button>\n    </Form>\n  );\n}\nexport default PhoneBookForm;\n// PhoneBookForm.propTypes = {\n//   onSubmit: PropTypes.func,\n// };\n\n// Input.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n//   value: PropTypes.string.isRequired,\n//   id: PropTypes.string.isRequired,\n// };","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  width: 440px;\n  font-size: 20px;\n  margin: 0 auto;\n  padding: 10px 5px;\n  & span {\n    display: inline-flex;\n    align-items: center;\n    font-weight: 600;\n    color: var(--grey);\n    &:first-of-type {\n      color: var(--dark);\n      margin-right: 10px;\n    }\n    & svg {\n      margin-right: 15px;\n      color: var(--dark);\n    }\n  }\n  & svg {\n    color: var(--dark);\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: 10px;\n  font-size: 16px;\n  padding: 5px;\n  color: var(--dark);\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  background-color: transparent;\n  transition: all 250ms ease;\n  &:hover {\n    border: 1px solid var(--dark);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './PhoneBookListItem.styles';\nimport { RiUserHeartFill } from 'react-icons/ri';\n\nconst PhoneBookListItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <Item>\n      <span>\n        <RiUserHeartFill size=\"20\" />\n        {name}:\n      </span>\n      <span>{number}</span>\n      <Button onClick={onDeleteContact}>\n        delete\n      </Button>\n    </Item>\n  );\n};\n\nPhoneBookListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default PhoneBookListItem;","export const getFilter = (state) => state.contacts.filter;\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getFilteredContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  return contacts.filter(\n    (contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.includes(filter)\n  );\n};","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  border-radius: 4px;\n  overflow: hidden;\n`;\n","import PhoneBookListItem from '../PhoneBookListItem/PhoneBookListItem';\n// import PropTypes from 'prop-types';\nimport { getFilteredContacts } from \"../../redux/contacts/contactsSelectors\";\nimport {  useSelector, useDispatch } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacrtsActions\";\nimport { List } from './PhoneBookList.styles';\n\nconst PhoneBookList = (/*{ contacts, onDeleteContact }*/) => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <PhoneBookListItem\n            key={id}\n            name={name}\n            number={number}\n            id={id}\n            onDeleteContact={() => dispatch(contactsActions.deleteContact(id))}\n          />\n        );\n      })}\n    </List>\n  );\n};\n\n// PhoneBookList.propTypes = {\n//   onDeleteContact: PropTypes.func.isRequired,\n//   contacts:PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n// };\n\nexport default PhoneBookList;","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  position: absolute;\n  left: 0;\n  bottom: 5px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n  cursor: text;\n  font-size: 20px;\n  color: var(--grey);\n\n  transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n  & svg {\n    margin-right: 10px;\n    transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 50px;\n  margin-bottom: 30px;\n  padding-left: 40px;\n  border: none;\n  border-bottom: 1px solid var(--dark);\n  font-size: 20px;\n  color: var(--dark);\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n  &::placeholder {\n    opacity: 0;\n    color: var(--dark);\n    transition: opacity 250ms ease;\n  }\n  &:focus {\n    outline: none;\n    border-bottom: 1px solid var(--dark);\n    &::placeholder {\n      opacity: 0.7;\n      transition-delay: 250ms;\n    }\n  }\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    font-size: 0;\n    text-transform: uppercase;\n    font-weight: 600;\n    color: var(--dark);\n    & svg {\n      color: var(--dark);\n    }\n  }\n`;\n\nexport const FilterContainer = styled.div`\n  position: relative;\n  width: 400px;\n  margin-bottom: 25px;\n`;","// import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { RiFilter2Line } from 'react-icons/ri';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacrtsActions\";\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\nimport { FilterContainer, Label, Input } from './Filter.styles';\n\nconst Filter = (/*{ value, onChange }*/) => {\n  const filterInputId = shortid();\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <FilterContainer>\n        <Input\n          id={filterInputId}\n          name=\"filter\"\n          onChange={(e) => dispatch(contactsActions.changeFilter(e.target.value))}\n          type=\"text\"\n          value={value}\n          placeholder=\"Name\"\n        />\n        <Label htmlFor={filterInputId}>\n          <RiFilter2Line size=\"30\" />\n          Find contact by name\n        </Label>\n      </FilterContainer>\n    </>\n  );\n}\n\n// Input.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\nexport default Filter;","import { RiContactsFill, RiUserAddFill  } from \"react-icons/ri\";\nimport Section from \"./components/Section/Section\";\nimport Container from \"./components/Container/Container\";\nimport PhoneBookForm from \"./components/PhoneBookForm/PhoneBookForm\";\nimport PhoneBookList from \"./components/PhoneBookList/PhoneBooklist\";\nimport Filter from \"./components/Filter/Filter\";\nimport { useSelector } from \"react-redux\";\nimport { getContacts } from \"./redux/contacts/contactsSelectors\";\nimport { ContainerContacts, ContainerAdd } from './components/Container/Container.styles';\n\nconst App = () => {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <>\n      <Section title=\"Phone Book\">\n        <Container>\n            <ContainerAdd>\n                <h1>\n                <RiUserAddFill /> Add Contact\n                </h1>\n                <PhoneBookForm/>       \n            </ContainerAdd>\n\n          <ContainerContacts>\n            <h2>\n              <RiContactsFill />\n              Contacts\n            </h2>\n            <Filter  />\n            {contacts.length > 0 && (\n              <PhoneBookList/>\n            )}\n          </ContainerContacts>\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default App;","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport Swal from \"sweetalert2\";\nimport contactsActions from \"./contacrtsActions\";\n\nconst initialState = [];\n\nconst checkContact = (contacts, name, number) => {\n  const includedName = contacts.find(\n    (contact) => contact.name.toLowerCase() === name.toLowerCase()\n  );\n\n  const includedNumber = contacts.find(\n    (contact) =>\n      contact.number.replace(/[^0-9]/g, \"\") === number.replace(/[^0-9]/g, \"\")\n  );\n\n  if (includedName) {\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: `${name.toUpperCase()}\\nis already in contacts!`,\n      confirmButtonColor: \"indianred\",\n    });\n\n    return includedName;\n  }\n\n  if (includedNumber) {\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: `This number is already in contacts as\\n${includedNumber.name.toUpperCase()}`,\n      confirmButtonColor: \"indianred\",\n    });\n    return includedNumber;\n  }\n};\n\nconst addContact = (state, { payload }) => {\n  const includedContact = checkContact(state, payload.name, payload.number);\n\n  if (includedContact) return state;\n\n  return [...state, payload];\n};\n\nconst deleteContact = (state, { payload }) => {\n  const contacts = state.filter(({ id }) => {\n    return id !== payload;\n  });\n\n  return contacts;\n};\n\nconst items = createReducer(initialState, {\n  [contactsActions.addContact]: addContact,\n  [contactsActions.deleteContact]: deleteContact,\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n// import { combineReducers } from \"redux\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts/contactsReducer\";\n\n// import { combineReducers, createStore } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}